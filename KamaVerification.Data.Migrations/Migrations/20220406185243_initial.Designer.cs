// <auto-generated />
using System;
using KamaVerification.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KamaVerification.Data.Migrations.Migrations
{
    [DbContext(typeof(KamaVerificationDbContext))]
    [Migration("20220406185243_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KamaVerification.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustomerId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("false");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<Guid>("PublicKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("public_key")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("current_timestamp");

                    b.HasKey("CustomerId")
                        .HasName("pk_customer");

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("KamaVerification.Data.Models.CustomerApiKey", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("api_key");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("is_enabled")
                        .HasDefaultValueSql("true");

                    b.Property<Guid>("PublicKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("public_key")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("current_timestamp");

                    b.HasKey("CustomerId")
                        .HasName("pk_customer_api_key");

                    b.ToTable("customer_api_key", (string)null);
                });

            modelBuilder.Entity("KamaVerification.Data.Models.CustomerEmailConfig", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<int>("ExpirationInMinutes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("expiration_in_minutes")
                        .HasDefaultValueSql("60");

                    b.Property<string>("FromEmail")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("from_email");

                    b.Property<string>("FromName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("from_name");

                    b.Property<Guid>("PublicKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("public_key")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("subject");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("current_timestamp");

                    b.HasKey("CustomerId")
                        .HasName("pk_customer_email_config");

                    b.ToTable("customer_email_config", (string)null);
                });

            modelBuilder.Entity("KamaVerification.Data.Models.CustomerApiKey", b =>
                {
                    b.HasOne("KamaVerification.Data.Models.Customer", "Customer")
                        .WithOne("ApiKey")
                        .HasForeignKey("KamaVerification.Data.Models.CustomerApiKey", "CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_customer_api_key_customer_customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("KamaVerification.Data.Models.CustomerEmailConfig", b =>
                {
                    b.HasOne("KamaVerification.Data.Models.Customer", "Customer")
                        .WithOne("EmailConfig")
                        .HasForeignKey("KamaVerification.Data.Models.CustomerEmailConfig", "CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_customer_email_config_customer_customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("KamaVerification.Data.Models.Customer", b =>
                {
                    b.Navigation("ApiKey");

                    b.Navigation("EmailConfig");
                });
#pragma warning restore 612, 618
        }
    }
}
